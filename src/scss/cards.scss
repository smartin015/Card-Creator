@font-face {
  font-family: 'capitals';
  src: url('/fonts/capitals.woff') format('woff');
}

/* NOTE:
Minion pro font requires typekit snippet
*/

$text-color: black;

$bold: 700;

$huge: 24pt;
$large: 13pt;
$base: 12pt;
$small: 9pt;
$border: 0.125in; /* this changes when manufacturing (0.125" normally, 0.25" with bleed), hence.... */
$edge: 0.125in;
$padding: 6pt;
$tiny: 2pt;
$thin: 0.8pt;

$icon-width: 0.15in;
$footer-height: 0.6in;

$font-header: "capitals", serif;
$font-body: "minion-pro", serif;


/* For printing @ 2.75"x3.75"*/
body.printing {
  $border: 0.25in;
  .printInstructions {
    display: none !important;
  }
  .card {
    width: 2.75in !important;
    height: 3.75in !important;
  }
  .page {
    width: 2.75in !important;
    height: 3.75in !important;
    /*&.backs {
      transform: none;

      .card {
        transform: none;
      }
    }*/
  }
  .flavortext {
    margin-bottom: 0;
  }
  .card {
    border-radius: 0 !important;
    &.front, &.back {
      border: $border solid white;
    }
    &.Encounter {
      border: $border solid black;
    }
  }
}

/* === THE CARDS === */
.icon {
  width: $icon-width;
  height: $icon-width;
  display: inline-block;
  svg {
    width: 100%;
    height: 100%;
    padding-right: $tiny;
  }
}
.threat {
  font-family: $font-header !important;
}
.card {
  width: 2.5in;
  height: 3.5in;
  position: relative;
  box-sizing: border-box;
  display: inline-block;
  vertical-align: bottom;
  background: white;
  font-family: $font-body;
  font-size: $base;

  border-radius: 2 * $border; /* poker card border radius, on top of the border width */

  .inline_icon {
    height: 15px;
    margin-bottom: -2px;
  }
  
  &.front, &.back {
    border: $border solid $text-color;
  }

  header {

    position: relative;
    padding: 3*$tiny $edge 0 $edge;

    font-size: $large;
    font-family: $font-header;

    .name {
      letter-spacing: -0.5pt;
    }

    .abilityType {
      position: absolute;
      top: 0;
      right: $edge;
      padding: $padding $padding $padding $padding;
      border-left: 1px solid $text-color;
      border-bottom: 1px solid $text-color;
      border-right: 1px solid $text-color;

      img {
        margin: 0;
        width: 0.2in;
        height: auto;
      }
    }

    .health {
      float: right;
      padding-left: $padding;

      img {
        margin: 0;
      }
    }
  }

  
  article {

    position: relative;
    clear: left;
    margin: 0 $edge $edge $edge;
    padding: $padding 0 $padding $padding;
    line-height: 1.2;

    &:before {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      width: 0.35in;
      height: 1in;
      border-top: 1.1pt solid $text-color;
      border-left: 1.1pt solid $text-color;
    }

    /* Top left indicators */
    .risk, .goldvalue, .damage, .target {
      font-weight: bold;
      font-family: $font-header;
      font-size: $small;
      padding-bottom: $tiny;
    }

    .ongoing {
      margin-bottom: $base;
    }

    .abilitytext {
      margin-top: $base;
    }
  }

  footer {
    position: absolute;
    left: $edge; bottom: 0.7*$border; right: $edge;
    height: $footer-height;
    border-right: $thin solid $text-color;
    border-bottom: $thin solid $text-color;

    font-size: $small;

    .flavortext {
      font-size: $small;
      font-style: italic;
      position: absolute;
      right: 0;
      bottom: 0;
      left: 22%;
      padding: $padding;
    }

    .cardType, .threat {
      font-family: $font-header;
      font-size: 0.8*$small;
      position: absolute;
      bottom: -0.4*$border;
      left: 0;
      padding-right: $padding;
      text-align: right;
      font-weight: $bold;
      letter-spacing: 0.5px;
      line-height: 1;
      background: white;
    }
  }

  &.Encounter {

    footer {
      border-color: white;

      .cardType {
        background-color: black;
      }

      .threat {
        background-color: black;
        left: 43%;
        right: 43%;
        text-align: center;
        font-size: $large;
        padding: 0;
        bottom: -0.95*$border;
      }
    }
  }
}

/* === BACK-SIDE === */
.page.backs {
  /* height: 0; hide in web view - display: none; breaks rendering? */

  .card {
    text-align: center;
    font-size: $huge;
    font-family: $font-header;
    font-weight: $bold;
    
    .cardType {
      position: absolute;
      top: 0.5in; left: 0; right: 0;
    }

    .class {
      position: absolute;
      top: 2.2in; left: 0; right: 0;
    }
    .threat {
      position: absolute;
      bottom: $edge; left: 0; right: 0;
    }
  }

  footer {
    .class {
      font-size: 150%;
    }
  }
}

/* === BACKGROUNDS === */
.Encounter {
  color: white;
  background: $text-color;
  border-radius: 0 !important;
  &.front, &.back {
    border-color: $text-color !important;
  }
  svg {
    fill: white;
  }
}

.card-background {
  content: "";
  position: absolute;
  top: 0; bottom: 0; left: 0; right: 0;

  background: no-repeat center center;
  background-size: 1in 1in;
}
.card.front:after {
  @extend .card-background;
  opacity: 0.10;
  top: -10%;
  left: 50%;
  right: -30%;
}
.card.back:after {
  @extend .card-background;
}
.card.front.Loot { &:before, &:after { /* Equipment front first, overwritten by class */
  background-image: url(../img/icon/loot.svg) !important;
}}

.card.Adventurer { &:before, &:after {
  background-image: url(../img/icon/adventurer.svg) !important;
}}
.card.Title { &:before, &:after {
  background-image: url(../img/icon/title.svg) !important;
}}
.card.Warrior { &:before, &:after {
  background-image: url(../img/icon/warrior.svg) !important;
}}
.card.Ranged { &:before, &:after {
  background-image: url(../img/icon/ranged.svg) !important;
}}
.card.Magic { &:before, &:after {
  background-image: url(../img/icon/magic.svg) !important;
}}
.card.Music { &:before, &:after {
  background-image: url(../img/icon/music.svg) !important;
}}

.card.Encounter, { &:before, &:after {
  background-image: url(../img/icon/encounter_white.svg) !important;
}}

/*
.card.Encounter.back.Forest { &:before, &:after {
  background-image: url(../img/environment/forest.svg) !important;
}}
.card.Encounter.back.Town { &:before, &:after {
  background-image: url(../img/environment/town.svg) !important;
}}
.card.Encounter.back.Underground { &:before, &:after {
  background-image: url(../img/environment/underground.svg) !important;
}}*/

.card.back.Loot { &:before, &:after {
  background-image: url(../img/icon/loot.svg) !important;
}}
